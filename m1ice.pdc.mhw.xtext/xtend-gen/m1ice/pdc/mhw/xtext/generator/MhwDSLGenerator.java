/**
 * generated by Xtext 2.16.0
 */
package m1ice.pdc.mhw.xtext.generator;

import m1ice.pdc.mhw.model.mhw.Request;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MhwDSLGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("import org.json.JSONArray;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public interface Request {");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public JSONArray doRequestAndFilter();");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    fsa.generateFile("Request.java", _builder);
    EObject _get = resource.getContents().get(0);
    Request myfsm = ((Request) _get);
    String _name = myfsm.getName();
    String _plus = (_name + ".java");
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("import java.io.InputStreamReader;");
    _builder_1.newLine();
    _builder_1.append("import java.net.URL;");
    _builder_1.newLine();
    _builder_1.append("import javax.net.ssl.HttpsURLConnection;");
    _builder_1.newLine();
    _builder_1.append("import org.json.JSONArray;");
    _builder_1.newLine();
    _builder_1.newLine();
    _builder_1.append("public class requete1 implements Request {");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("@Override");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("public JSONArray doRequestAndFilter() {");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("// TODO Auto-generated method stub");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("try {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("return new JSONArray(getResultFromRequest(\"https://mhw-db.com/armor\"));");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}catch(Exception e) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("return new JSONArray(\"\");");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.newLine();
    _builder_1.append("\t");
    _builder_1.append("public static String getResultFromRequest(String request) throws Exception {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("StringBuilder result = new StringBuilder();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("URL url = new URL(request);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("HttpsURLConnection connection = (HttpsURLConnection) url.openConnection();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("connection.addRequestProperty(\"User-Agent\",\"Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)\");");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("connection.setRequestMethod(\"GET\");");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("BufferedReader rd = new BufferedReader(new InputStreamReader(connection.getInputStream()));");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("String line;");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("while((line = rd.readLine()) != null) {");
    _builder_1.newLine();
    _builder_1.append("\t\t\t\t");
    _builder_1.append("result.append(line);");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("rd.close();");
    _builder_1.newLine();
    _builder_1.append("\t\t\t");
    _builder_1.append("return result.toString();");
    _builder_1.newLine();
    _builder_1.append("\t\t");
    _builder_1.append("}");
    _builder_1.newLine();
    _builder_1.append("}");
    _builder_1.newLine();
    fsa.generateFile(_plus, _builder_1);
  }
}
